// <auto-generated />
using DowUmg.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DowUmg.Migrations.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191216060600_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1");

            modelBuilder.Entity("DowUmg.Data.Entities.DowMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ModId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModId2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Players")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModId1", "ModId2");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowMod", b =>
                {
                    b.Property<bool>("IsAddition")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModFolder")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IsAddition", "ModFolder");

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ModId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModId2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModId1", "ModId2");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.GameRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsWinCondition")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ModId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModId2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModId1", "ModId2");

                    b.ToTable("GameRules");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowMap", b =>
                {
                    b.HasOne("DowUmg.Data.Entities.DowMod", "Mod")
                        .WithMany("Maps")
                        .HasForeignKey("ModId1", "ModId2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowRace", b =>
                {
                    b.HasOne("DowUmg.Data.Entities.DowMod", "Mod")
                        .WithMany("Races")
                        .HasForeignKey("ModId1", "ModId2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DowUmg.Data.Entities.GameRule", b =>
                {
                    b.HasOne("DowUmg.Data.Entities.DowMod", "Mod")
                        .WithMany("Rules")
                        .HasForeignKey("ModId1", "ModId2")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
