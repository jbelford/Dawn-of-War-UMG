// <auto-generated />
using DowUmg.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DowUmg.Migrations.Migrations
{
    [DbContext(typeof(ModsContext))]
    [Migration("20240204234744_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("DowModDowMod", b =>
                {
                    b.Property<int>("DependenciesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DependentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DependenciesId", "DependentsId");

                    b.HasIndex("DependentsId");

                    b.ToTable("DowModDowMod");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ModDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Players")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModDataId");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowMod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVanilla")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Playable")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModDataId");

                    b.HasIndex("IsVanilla", "ModFile");

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowModData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModFolder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ModDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModDataId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.GameRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsWinCondition")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModDataId");

                    b.ToTable("GameRules");
                });

            modelBuilder.Entity("DowModDowMod", b =>
                {
                    b.HasOne("DowUmg.Data.Entities.DowMod", null)
                        .WithMany()
                        .HasForeignKey("DependenciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DowUmg.Data.Entities.DowMod", null)
                        .WithMany()
                        .HasForeignKey("DependentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowMap", b =>
                {
                    b.HasOne("DowUmg.Data.Entities.DowModData", "Mod")
                        .WithMany("Maps")
                        .HasForeignKey("ModDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowMod", b =>
                {
                    b.HasOne("DowUmg.Data.Entities.DowModData", "Data")
                        .WithMany("Mods")
                        .HasForeignKey("ModDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Data");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowRace", b =>
                {
                    b.HasOne("DowUmg.Data.Entities.DowModData", "Mod")
                        .WithMany("Races")
                        .HasForeignKey("ModDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.GameRule", b =>
                {
                    b.HasOne("DowUmg.Data.Entities.DowModData", "Mod")
                        .WithMany("Rules")
                        .HasForeignKey("ModDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");
                });

            modelBuilder.Entity("DowUmg.Data.Entities.DowModData", b =>
                {
                    b.Navigation("Maps");

                    b.Navigation("Mods");

                    b.Navigation("Races");

                    b.Navigation("Rules");
                });
#pragma warning restore 612, 618
        }
    }
}
